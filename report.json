{
  "collection": {
    "_": {
      "postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
      "exporter_id": "28814462"
    },
    "item": [
      {
        "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
        "name": "Get All Books",
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "5"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "// Validate Status Code\r",
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "// Validate Status Text\r",
                "pm.test(\"Status text is OK\", function () {\r",
                "    pm.response.to.have.status(\"OK\");\r",
                "});\r",
                "\r",
                "// Validate Response Time (under 2 seconds)\r",
                "pm.test(\"Response time is within acceptable range\", function () {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                "});\r",
                "\r",
                "// Validate Headers - Check if \"Content-Type\" exists\r",
                "pm.test(\"Content-Type header exists\", function () {\r",
                "    pm.response.to.have.header(\"Content-Type\");\r",
                "});\r",
                "\r",
                "// Validate Content-Type is JSON\r",
                "pm.test(\"Content-Type is application/json\", function () {\r",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                "});\r",
                "\r",
                "const schema = {\r",
                "    \"type\": \"object\",\r",
                "    \"properties\": {\r",
                "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                "        \"title\": { \"type\": \"string\" },\r",
                "        \"author\": { \"type\": \"string\" },\r",
                "        \"publishedYear\": { \"type\": \"integer\" },\r",
                "        \"genre\": { \"type\": \"string\" },\r",
                "        \"price\": { \"type\": \"number\" },\r",
                "        \"available\": { \"type\": \"boolean\" }\r",
                "    },\r",
                "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                "};\r",
                "\r",
                "// Validate JSON Schema\r",
                "pm.test(\"Response follows correct JSON schema\", function () {\r",
                "    pm.response.to.have.jsonSchema(schema);\r",
                "});\r",
                "\r",
                "let jsonData = pm.response.json();\r",
                "\r",
                "// Verify Specific ID\r",
                "pm.test(\"ID is 6\", function () {\r",
                "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                "});\r",
                "\r",
                "// Verify Title\r",
                "pm.test(\"Book title is correct\", function () {\r",
                "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                "});\r",
                "\r",
                "// Verify Price\r",
                "pm.test(\"Price is correctly updated\", function () {\r",
                "    pm.expect(jsonData.price).to.eql(74.99);\r",
                "});\r",
                "\r",
                "// Check if Available is true\r",
                "pm.test(\"Book is available\", function () {\r",
                "    pm.expect(jsonData.available).to.be.true;\r",
                "});\r",
                "\r",
                "// Check Server Header\r",
                "pm.test(\"Server header exists\", function () {\r",
                "    pm.response.to.have.header(\"Server\");\r",
                "});\r",
                "\r",
                "// Verify Content-Length (optional)\r",
                "pm.test(\"Content-Length is within range\", function () {\r",
                "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                "});\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
            }
          }
        ]
      },
      {
        "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
        "name": "Add New Book",
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": []
      },
      {
        "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
        "name": "Delete Book",
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": []
      },
      {
        "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
        "name": "Update book",
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
      "name": "New Collection",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "cb1356f5-2993-47a0-8f05-74fa5bb0df4f",
    "values": []
  },
  "globals": {
    "id": "580ae89d-6720-4e4e-8e3a-742840530414",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 12,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.5,
      "responseMin": 2,
      "responseMax": 27,
      "responseSd": 10.161200716450788,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1740557410343,
      "completed": 1740557410783
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3031ef7-0c80-4ec5-8f6f-ba3a384bf04b",
          "httpRequestId": "bdac30b6-5c33-4060-8833-36b7aa75b0dc"
        },
        "item": {
          "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
          "name": "Get All Books",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Validate Status Code\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate Status Text\r",
                  "pm.test(\"Status text is OK\", function () {\r",
                  "    pm.response.to.have.status(\"OK\");\r",
                  "});\r",
                  "\r",
                  "// Validate Response Time (under 2 seconds)\r",
                  "pm.test(\"Response time is within acceptable range\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                  "});\r",
                  "\r",
                  "// Validate Headers - Check if \"Content-Type\" exists\r",
                  "pm.test(\"Content-Type header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "});\r",
                  "\r",
                  "// Validate Content-Type is JSON\r",
                  "pm.test(\"Content-Type is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "const schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                  "        \"title\": { \"type\": \"string\" },\r",
                  "        \"author\": { \"type\": \"string\" },\r",
                  "        \"publishedYear\": { \"type\": \"integer\" },\r",
                  "        \"genre\": { \"type\": \"string\" },\r",
                  "        \"price\": { \"type\": \"number\" },\r",
                  "        \"available\": { \"type\": \"boolean\" }\r",
                  "    },\r",
                  "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                  "};\r",
                  "\r",
                  "// Validate JSON Schema\r",
                  "pm.test(\"Response follows correct JSON schema\", function () {\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});\r",
                  "\r",
                  "let jsonData = pm.response.json();\r",
                  "\r",
                  "// Verify Specific ID\r",
                  "pm.test(\"ID is 6\", function () {\r",
                  "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                  "});\r",
                  "\r",
                  "// Verify Title\r",
                  "pm.test(\"Book title is correct\", function () {\r",
                  "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                  "});\r",
                  "\r",
                  "// Verify Price\r",
                  "pm.test(\"Price is correctly updated\", function () {\r",
                  "    pm.expect(jsonData.price).to.eql(74.99);\r",
                  "});\r",
                  "\r",
                  "// Check if Available is true\r",
                  "pm.test(\"Book is available\", function () {\r",
                  "    pm.expect(jsonData.available).to.be.true;\r",
                  "});\r",
                  "\r",
                  "// Check Server Header\r",
                  "pm.test(\"Server header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Server\");\r",
                  "});\r",
                  "\r",
                  "// Verify Content-Length (optional)\r",
                  "pm.test(\"Content-Length is within range\", function () {\r",
                  "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                  "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "5"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0a2c50b9-5d21-4fa7-b161-b85d7db6c710",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3d71a2b4-e8b8-4dfc-a484-12b84bd55b94",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "tinyhttp"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, HEAD, PUT, PATCH, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "content-type"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 26 Feb 2025 08:10:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Content-Length",
              "value": "164"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              34,
              53,
              34,
              44,
              10,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              89,
              111,
              117,
              32,
              68,
              111,
              110,
              39,
              116,
              32,
              75,
              110,
              111,
              119,
              32,
              74,
              83,
              34,
              44,
              10,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              32,
              34,
              75,
              121,
              108,
              101,
              32,
              83,
              105,
              109,
              112,
              115,
              111,
              110,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
              101,
              100,
              89,
              101,
              97,
              114,
              34,
              58,
              32,
              50,
              48,
              49,
              52,
              44,
              10,
              32,
              32,
              34,
              103,
              101,
              110,
              114,
              101,
              34,
              58,
              32,
              34,
              74,
              97,
              118,
              97,
              83,
              99,
              114,
              105,
              112,
              116,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              51,
              53,
              46,
              55,
              53,
              44,
              10,
              32,
              32,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 27,
          "responseSize": 164
        },
        "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Status text is OK",
            "skipped": false
          },
          {
            "assertion": "Response time is within acceptable range",
            "skipped": false
          },
          {
            "assertion": "Content-Type header exists",
            "skipped": false
          },
          {
            "assertion": "Content-Type is application/json",
            "skipped": false
          },
          {
            "assertion": "Response follows correct JSON schema",
            "skipped": false
          },
          {
            "assertion": "ID is 6",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 6,
              "test": "ID is 6",
              "message": "expected '5' to deeply equal '6'",
              "stack": "AssertionError: expected '5' to deeply equal '6'\n   at Object.eval sandbox-script.js:7:1)"
            }
          },
          {
            "assertion": "Book title is correct",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 7,
              "test": "Book title is correct",
              "message": "expected 'You Don\\'t Know JS' to deeply equal 'The Art of Computer Programming'",
              "stack": "AssertionError: expected 'You Don\\'t Know JS' to deeply equal 'The Art of Computer Programming'\n   at Object.eval sandbox-script.js:8:1)"
            }
          },
          {
            "assertion": "Price is correctly updated",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 8,
              "test": "Price is correctly updated",
              "message": "expected 35.75 to deeply equal 74.99",
              "stack": "AssertionError: expected 35.75 to deeply equal 74.99\n   at Object.eval sandbox-script.js:9:1)"
            }
          },
          {
            "assertion": "Book is available",
            "skipped": false
          },
          {
            "assertion": "Server header exists",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 10,
              "test": "Server header exists",
              "message": "expected response to have header with key 'Server'",
              "stack": "AssertionError: expected response to have header with key 'Server'\n   at Object.eval sandbox-script.js:11:1)"
            }
          },
          {
            "assertion": "Content-Length is within range",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2602f756-a345-4c8b-b529-c5b74d98feaf",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b1fbb880-5b54-4b39-b496-1f6dbc79d753"
        },
        "item": {
          "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
          "name": "Add New Book",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ba17be99-6fbc-49b9-9669-8d0fdade011e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "192",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "855c901c-203a-41eb-943b-08e7f648f5cc",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "tinyhttp"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, HEAD, PUT, PATCH, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "content-type"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 26 Feb 2025 08:10:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Content-Length",
              "value": "184"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              34,
              54,
              34,
              44,
              10,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              84,
              104,
              101,
              32,
              65,
              114,
              116,
              32,
              111,
              102,
              32,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              32,
              80,
              114,
              111,
              103,
              114,
              97,
              109,
              109,
              105,
              110,
              103,
              34,
              44,
              10,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              32,
              34,
              68,
              111,
              110,
              97,
              108,
              100,
              32,
              75,
              110,
              117,
              116,
              104,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
              101,
              100,
              89,
              101,
              97,
              114,
              34,
              58,
              32,
              49,
              57,
              54,
              56,
              44,
              10,
              32,
              32,
              34,
              103,
              101,
              110,
              114,
              101,
              34,
              58,
              32,
              34,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              32,
              83,
              99,
              105,
              101,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              55,
              53,
              46,
              57,
              57,
              44,
              10,
              32,
              32,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 184
        },
        "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9"
      },
      {
        "cursor": {
          "ref": "86a666a5-d56a-4ffe-b815-76f0f638c9f8",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "213bc25c-1367-4015-a900-1628ec6c3ce9"
        },
        "item": {
          "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
          "name": "Delete Book",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "6"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a3e5feb0-f4ec-4c5a-a833-12c23cc6de14",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "9027863e-8ef2-41c0-8fa6-d7e3a3b4aad0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "tinyhttp"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, HEAD, PUT, PATCH, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "content-type"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Wed, 26 Feb 2025 08:10:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Content-Length",
              "value": "184"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              34,
              54,
              34,
              44,
              10,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              84,
              104,
              101,
              32,
              65,
              114,
              116,
              32,
              111,
              102,
              32,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              32,
              80,
              114,
              111,
              103,
              114,
              97,
              109,
              109,
              105,
              110,
              103,
              34,
              44,
              10,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              32,
              34,
              68,
              111,
              110,
              97,
              108,
              100,
              32,
              75,
              110,
              117,
              116,
              104,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
              101,
              100,
              89,
              101,
              97,
              114,
              34,
              58,
              32,
              49,
              57,
              54,
              56,
              44,
              10,
              32,
              32,
              34,
              103,
              101,
              110,
              114,
              101,
              34,
              58,
              32,
              34,
              67,
              111,
              109,
              112,
              117,
              116,
              101,
              114,
              32,
              83,
              99,
              105,
              101,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              55,
              53,
              46,
              57,
              57,
              44,
              10,
              32,
              32,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 184
        },
        "id": "bf12342a-d96d-4c9f-9002-ac1816199736"
      },
      {
        "cursor": {
          "ref": "6bbf3c56-3def-4d0c-82d2-7c59a900df81",
          "length": 4,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b4c792e-1f6a-4996-a26d-47020a060e24"
        },
        "item": {
          "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
          "name": "Update book",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "6"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "books",
              "6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "81116c07-00ae-46bf-8bc2-2eff059d10cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "190",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "02e677e4-f372-4ebe-b20c-2a636fe1e8e1",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "tinyhttp"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, HEAD, PUT, PATCH, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "content-type"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "etag",
              "value": "W/\"9-0gXL1ngzMqISxa6S1zx3F4wtLyg\""
            },
            {
              "key": "Date",
              "value": "Wed, 26 Feb 2025 08:10:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Content-Length",
              "value": "9"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 9
        },
        "id": "0fb6856d-1892-487f-89df-abaf502a5dec"
      }
    ],
    "transfers": {
      "responseTotal": 541
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 6,
          "test": "ID is 6",
          "message": "expected '5' to deeply equal '6'",
          "stack": "AssertionError: expected '5' to deeply equal '6'\n   at Object.eval sandbox-script.js:7:1)",
          "checksum": "46a106b4e69b78eb7c5540382d6422e4",
          "id": "7609026f-edca-4897-8f8e-d04a3e83d669",
          "timestamp": 1740557410479,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 7,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:6 in test-script",
        "source": {
          "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
          "name": "Get All Books",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Validate Status Code\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate Status Text\r",
                  "pm.test(\"Status text is OK\", function () {\r",
                  "    pm.response.to.have.status(\"OK\");\r",
                  "});\r",
                  "\r",
                  "// Validate Response Time (under 2 seconds)\r",
                  "pm.test(\"Response time is within acceptable range\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                  "});\r",
                  "\r",
                  "// Validate Headers - Check if \"Content-Type\" exists\r",
                  "pm.test(\"Content-Type header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "});\r",
                  "\r",
                  "// Validate Content-Type is JSON\r",
                  "pm.test(\"Content-Type is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "const schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                  "        \"title\": { \"type\": \"string\" },\r",
                  "        \"author\": { \"type\": \"string\" },\r",
                  "        \"publishedYear\": { \"type\": \"integer\" },\r",
                  "        \"genre\": { \"type\": \"string\" },\r",
                  "        \"price\": { \"type\": \"number\" },\r",
                  "        \"available\": { \"type\": \"boolean\" }\r",
                  "    },\r",
                  "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                  "};\r",
                  "\r",
                  "// Validate JSON Schema\r",
                  "pm.test(\"Response follows correct JSON schema\", function () {\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});\r",
                  "\r",
                  "let jsonData = pm.response.json();\r",
                  "\r",
                  "// Verify Specific ID\r",
                  "pm.test(\"ID is 6\", function () {\r",
                  "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                  "});\r",
                  "\r",
                  "// Verify Title\r",
                  "pm.test(\"Book title is correct\", function () {\r",
                  "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                  "});\r",
                  "\r",
                  "// Verify Price\r",
                  "pm.test(\"Price is correctly updated\", function () {\r",
                  "    pm.expect(jsonData.price).to.eql(74.99);\r",
                  "});\r",
                  "\r",
                  "// Check if Available is true\r",
                  "pm.test(\"Book is available\", function () {\r",
                  "    pm.expect(jsonData.available).to.be.true;\r",
                  "});\r",
                  "\r",
                  "// Check Server Header\r",
                  "pm.test(\"Server header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Server\");\r",
                  "});\r",
                  "\r",
                  "// Verify Content-Length (optional)\r",
                  "pm.test(\"Content-Length is within range\", function () {\r",
                  "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                  "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "exporter_id": "28814462"
          },
          "item": [
            {
              "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
              "name": "Get All Books",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "5"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Validate Status Code\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate Status Text\r",
                      "pm.test(\"Status text is OK\", function () {\r",
                      "    pm.response.to.have.status(\"OK\");\r",
                      "});\r",
                      "\r",
                      "// Validate Response Time (under 2 seconds)\r",
                      "pm.test(\"Response time is within acceptable range\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                      "});\r",
                      "\r",
                      "// Validate Headers - Check if \"Content-Type\" exists\r",
                      "pm.test(\"Content-Type header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Content-Type\");\r",
                      "});\r",
                      "\r",
                      "// Validate Content-Type is JSON\r",
                      "pm.test(\"Content-Type is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "const schema = {\r",
                      "    \"type\": \"object\",\r",
                      "    \"properties\": {\r",
                      "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                      "        \"title\": { \"type\": \"string\" },\r",
                      "        \"author\": { \"type\": \"string\" },\r",
                      "        \"publishedYear\": { \"type\": \"integer\" },\r",
                      "        \"genre\": { \"type\": \"string\" },\r",
                      "        \"price\": { \"type\": \"number\" },\r",
                      "        \"available\": { \"type\": \"boolean\" }\r",
                      "    },\r",
                      "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                      "};\r",
                      "\r",
                      "// Validate JSON Schema\r",
                      "pm.test(\"Response follows correct JSON schema\", function () {\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});\r",
                      "\r",
                      "let jsonData = pm.response.json();\r",
                      "\r",
                      "// Verify Specific ID\r",
                      "pm.test(\"ID is 6\", function () {\r",
                      "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                      "});\r",
                      "\r",
                      "// Verify Title\r",
                      "pm.test(\"Book title is correct\", function () {\r",
                      "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                      "});\r",
                      "\r",
                      "// Verify Price\r",
                      "pm.test(\"Price is correctly updated\", function () {\r",
                      "    pm.expect(jsonData.price).to.eql(74.99);\r",
                      "});\r",
                      "\r",
                      "// Check if Available is true\r",
                      "pm.test(\"Book is available\", function () {\r",
                      "    pm.expect(jsonData.available).to.be.true;\r",
                      "});\r",
                      "\r",
                      "// Check Server Header\r",
                      "pm.test(\"Server header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Server\");\r",
                      "});\r",
                      "\r",
                      "// Verify Content-Length (optional)\r",
                      "pm.test(\"Content-Length is within range\", function () {\r",
                      "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                      "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
                  }
                }
              ]
            },
            {
              "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
              "name": "Add New Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
              "name": "Delete Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
              "name": "Update book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "name": "New Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3031ef7-0c80-4ec5-8f6f-ba3a384bf04b",
          "httpRequestId": "bdac30b6-5c33-4060-8833-36b7aa75b0dc",
          "scriptId": "29cbac4d-dee4-4141-b328-cb306e86f602",
          "execution": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 7,
          "test": "Book title is correct",
          "message": "expected 'You Don\\'t Know JS' to deeply equal 'The Art of Computer Programming'",
          "stack": "AssertionError: expected 'You Don\\'t Know JS' to deeply equal 'The Art of Computer Programming'\n   at Object.eval sandbox-script.js:8:1)",
          "checksum": "748476ebd5829f23dee24974bc55b50a",
          "id": "bf8bf5b6-202e-4751-8a0e-5d2588e14a91",
          "timestamp": 1740557410482,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 8,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:7 in test-script",
        "source": {
          "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
          "name": "Get All Books",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Validate Status Code\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate Status Text\r",
                  "pm.test(\"Status text is OK\", function () {\r",
                  "    pm.response.to.have.status(\"OK\");\r",
                  "});\r",
                  "\r",
                  "// Validate Response Time (under 2 seconds)\r",
                  "pm.test(\"Response time is within acceptable range\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                  "});\r",
                  "\r",
                  "// Validate Headers - Check if \"Content-Type\" exists\r",
                  "pm.test(\"Content-Type header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "});\r",
                  "\r",
                  "// Validate Content-Type is JSON\r",
                  "pm.test(\"Content-Type is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "const schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                  "        \"title\": { \"type\": \"string\" },\r",
                  "        \"author\": { \"type\": \"string\" },\r",
                  "        \"publishedYear\": { \"type\": \"integer\" },\r",
                  "        \"genre\": { \"type\": \"string\" },\r",
                  "        \"price\": { \"type\": \"number\" },\r",
                  "        \"available\": { \"type\": \"boolean\" }\r",
                  "    },\r",
                  "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                  "};\r",
                  "\r",
                  "// Validate JSON Schema\r",
                  "pm.test(\"Response follows correct JSON schema\", function () {\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});\r",
                  "\r",
                  "let jsonData = pm.response.json();\r",
                  "\r",
                  "// Verify Specific ID\r",
                  "pm.test(\"ID is 6\", function () {\r",
                  "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                  "});\r",
                  "\r",
                  "// Verify Title\r",
                  "pm.test(\"Book title is correct\", function () {\r",
                  "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                  "});\r",
                  "\r",
                  "// Verify Price\r",
                  "pm.test(\"Price is correctly updated\", function () {\r",
                  "    pm.expect(jsonData.price).to.eql(74.99);\r",
                  "});\r",
                  "\r",
                  "// Check if Available is true\r",
                  "pm.test(\"Book is available\", function () {\r",
                  "    pm.expect(jsonData.available).to.be.true;\r",
                  "});\r",
                  "\r",
                  "// Check Server Header\r",
                  "pm.test(\"Server header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Server\");\r",
                  "});\r",
                  "\r",
                  "// Verify Content-Length (optional)\r",
                  "pm.test(\"Content-Length is within range\", function () {\r",
                  "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                  "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "exporter_id": "28814462"
          },
          "item": [
            {
              "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
              "name": "Get All Books",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "5"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Validate Status Code\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate Status Text\r",
                      "pm.test(\"Status text is OK\", function () {\r",
                      "    pm.response.to.have.status(\"OK\");\r",
                      "});\r",
                      "\r",
                      "// Validate Response Time (under 2 seconds)\r",
                      "pm.test(\"Response time is within acceptable range\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                      "});\r",
                      "\r",
                      "// Validate Headers - Check if \"Content-Type\" exists\r",
                      "pm.test(\"Content-Type header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Content-Type\");\r",
                      "});\r",
                      "\r",
                      "// Validate Content-Type is JSON\r",
                      "pm.test(\"Content-Type is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "const schema = {\r",
                      "    \"type\": \"object\",\r",
                      "    \"properties\": {\r",
                      "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                      "        \"title\": { \"type\": \"string\" },\r",
                      "        \"author\": { \"type\": \"string\" },\r",
                      "        \"publishedYear\": { \"type\": \"integer\" },\r",
                      "        \"genre\": { \"type\": \"string\" },\r",
                      "        \"price\": { \"type\": \"number\" },\r",
                      "        \"available\": { \"type\": \"boolean\" }\r",
                      "    },\r",
                      "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                      "};\r",
                      "\r",
                      "// Validate JSON Schema\r",
                      "pm.test(\"Response follows correct JSON schema\", function () {\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});\r",
                      "\r",
                      "let jsonData = pm.response.json();\r",
                      "\r",
                      "// Verify Specific ID\r",
                      "pm.test(\"ID is 6\", function () {\r",
                      "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                      "});\r",
                      "\r",
                      "// Verify Title\r",
                      "pm.test(\"Book title is correct\", function () {\r",
                      "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                      "});\r",
                      "\r",
                      "// Verify Price\r",
                      "pm.test(\"Price is correctly updated\", function () {\r",
                      "    pm.expect(jsonData.price).to.eql(74.99);\r",
                      "});\r",
                      "\r",
                      "// Check if Available is true\r",
                      "pm.test(\"Book is available\", function () {\r",
                      "    pm.expect(jsonData.available).to.be.true;\r",
                      "});\r",
                      "\r",
                      "// Check Server Header\r",
                      "pm.test(\"Server header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Server\");\r",
                      "});\r",
                      "\r",
                      "// Verify Content-Length (optional)\r",
                      "pm.test(\"Content-Length is within range\", function () {\r",
                      "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                      "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
                  }
                }
              ]
            },
            {
              "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
              "name": "Add New Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
              "name": "Delete Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
              "name": "Update book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "name": "New Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3031ef7-0c80-4ec5-8f6f-ba3a384bf04b",
          "httpRequestId": "bdac30b6-5c33-4060-8833-36b7aa75b0dc",
          "scriptId": "29cbac4d-dee4-4141-b328-cb306e86f602",
          "execution": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 8,
          "test": "Price is correctly updated",
          "message": "expected 35.75 to deeply equal 74.99",
          "stack": "AssertionError: expected 35.75 to deeply equal 74.99\n   at Object.eval sandbox-script.js:9:1)",
          "checksum": "30a71725e11dd2b6ac3f93617d396ad5",
          "id": "1e9765db-14d6-4ddd-a6de-e68121bb243d",
          "timestamp": 1740557410483,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 9,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:8 in test-script",
        "source": {
          "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
          "name": "Get All Books",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Validate Status Code\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate Status Text\r",
                  "pm.test(\"Status text is OK\", function () {\r",
                  "    pm.response.to.have.status(\"OK\");\r",
                  "});\r",
                  "\r",
                  "// Validate Response Time (under 2 seconds)\r",
                  "pm.test(\"Response time is within acceptable range\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                  "});\r",
                  "\r",
                  "// Validate Headers - Check if \"Content-Type\" exists\r",
                  "pm.test(\"Content-Type header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "});\r",
                  "\r",
                  "// Validate Content-Type is JSON\r",
                  "pm.test(\"Content-Type is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "const schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                  "        \"title\": { \"type\": \"string\" },\r",
                  "        \"author\": { \"type\": \"string\" },\r",
                  "        \"publishedYear\": { \"type\": \"integer\" },\r",
                  "        \"genre\": { \"type\": \"string\" },\r",
                  "        \"price\": { \"type\": \"number\" },\r",
                  "        \"available\": { \"type\": \"boolean\" }\r",
                  "    },\r",
                  "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                  "};\r",
                  "\r",
                  "// Validate JSON Schema\r",
                  "pm.test(\"Response follows correct JSON schema\", function () {\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});\r",
                  "\r",
                  "let jsonData = pm.response.json();\r",
                  "\r",
                  "// Verify Specific ID\r",
                  "pm.test(\"ID is 6\", function () {\r",
                  "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                  "});\r",
                  "\r",
                  "// Verify Title\r",
                  "pm.test(\"Book title is correct\", function () {\r",
                  "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                  "});\r",
                  "\r",
                  "// Verify Price\r",
                  "pm.test(\"Price is correctly updated\", function () {\r",
                  "    pm.expect(jsonData.price).to.eql(74.99);\r",
                  "});\r",
                  "\r",
                  "// Check if Available is true\r",
                  "pm.test(\"Book is available\", function () {\r",
                  "    pm.expect(jsonData.available).to.be.true;\r",
                  "});\r",
                  "\r",
                  "// Check Server Header\r",
                  "pm.test(\"Server header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Server\");\r",
                  "});\r",
                  "\r",
                  "// Verify Content-Length (optional)\r",
                  "pm.test(\"Content-Length is within range\", function () {\r",
                  "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                  "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "exporter_id": "28814462"
          },
          "item": [
            {
              "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
              "name": "Get All Books",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "5"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Validate Status Code\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate Status Text\r",
                      "pm.test(\"Status text is OK\", function () {\r",
                      "    pm.response.to.have.status(\"OK\");\r",
                      "});\r",
                      "\r",
                      "// Validate Response Time (under 2 seconds)\r",
                      "pm.test(\"Response time is within acceptable range\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                      "});\r",
                      "\r",
                      "// Validate Headers - Check if \"Content-Type\" exists\r",
                      "pm.test(\"Content-Type header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Content-Type\");\r",
                      "});\r",
                      "\r",
                      "// Validate Content-Type is JSON\r",
                      "pm.test(\"Content-Type is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "const schema = {\r",
                      "    \"type\": \"object\",\r",
                      "    \"properties\": {\r",
                      "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                      "        \"title\": { \"type\": \"string\" },\r",
                      "        \"author\": { \"type\": \"string\" },\r",
                      "        \"publishedYear\": { \"type\": \"integer\" },\r",
                      "        \"genre\": { \"type\": \"string\" },\r",
                      "        \"price\": { \"type\": \"number\" },\r",
                      "        \"available\": { \"type\": \"boolean\" }\r",
                      "    },\r",
                      "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                      "};\r",
                      "\r",
                      "// Validate JSON Schema\r",
                      "pm.test(\"Response follows correct JSON schema\", function () {\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});\r",
                      "\r",
                      "let jsonData = pm.response.json();\r",
                      "\r",
                      "// Verify Specific ID\r",
                      "pm.test(\"ID is 6\", function () {\r",
                      "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                      "});\r",
                      "\r",
                      "// Verify Title\r",
                      "pm.test(\"Book title is correct\", function () {\r",
                      "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                      "});\r",
                      "\r",
                      "// Verify Price\r",
                      "pm.test(\"Price is correctly updated\", function () {\r",
                      "    pm.expect(jsonData.price).to.eql(74.99);\r",
                      "});\r",
                      "\r",
                      "// Check if Available is true\r",
                      "pm.test(\"Book is available\", function () {\r",
                      "    pm.expect(jsonData.available).to.be.true;\r",
                      "});\r",
                      "\r",
                      "// Check Server Header\r",
                      "pm.test(\"Server header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Server\");\r",
                      "});\r",
                      "\r",
                      "// Verify Content-Length (optional)\r",
                      "pm.test(\"Content-Length is within range\", function () {\r",
                      "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                      "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
                  }
                }
              ]
            },
            {
              "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
              "name": "Add New Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
              "name": "Delete Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
              "name": "Update book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "name": "New Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3031ef7-0c80-4ec5-8f6f-ba3a384bf04b",
          "httpRequestId": "bdac30b6-5c33-4060-8833-36b7aa75b0dc",
          "scriptId": "29cbac4d-dee4-4141-b328-cb306e86f602",
          "execution": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 10,
          "test": "Server header exists",
          "message": "expected response to have header with key 'Server'",
          "stack": "AssertionError: expected response to have header with key 'Server'\n   at Object.eval sandbox-script.js:11:1)",
          "checksum": "470f52e2be87bc0db09a8e3391e8420f",
          "id": "db608ff2-f270-4e66-9ee4-c1399701f6b0",
          "timestamp": 1740557410484,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 11,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:10 in test-script",
        "source": {
          "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
          "name": "Get All Books",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "books",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Validate Status Code\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate Status Text\r",
                  "pm.test(\"Status text is OK\", function () {\r",
                  "    pm.response.to.have.status(\"OK\");\r",
                  "});\r",
                  "\r",
                  "// Validate Response Time (under 2 seconds)\r",
                  "pm.test(\"Response time is within acceptable range\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                  "});\r",
                  "\r",
                  "// Validate Headers - Check if \"Content-Type\" exists\r",
                  "pm.test(\"Content-Type header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "});\r",
                  "\r",
                  "// Validate Content-Type is JSON\r",
                  "pm.test(\"Content-Type is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "const schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                  "        \"title\": { \"type\": \"string\" },\r",
                  "        \"author\": { \"type\": \"string\" },\r",
                  "        \"publishedYear\": { \"type\": \"integer\" },\r",
                  "        \"genre\": { \"type\": \"string\" },\r",
                  "        \"price\": { \"type\": \"number\" },\r",
                  "        \"available\": { \"type\": \"boolean\" }\r",
                  "    },\r",
                  "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                  "};\r",
                  "\r",
                  "// Validate JSON Schema\r",
                  "pm.test(\"Response follows correct JSON schema\", function () {\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "});\r",
                  "\r",
                  "let jsonData = pm.response.json();\r",
                  "\r",
                  "// Verify Specific ID\r",
                  "pm.test(\"ID is 6\", function () {\r",
                  "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                  "});\r",
                  "\r",
                  "// Verify Title\r",
                  "pm.test(\"Book title is correct\", function () {\r",
                  "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                  "});\r",
                  "\r",
                  "// Verify Price\r",
                  "pm.test(\"Price is correctly updated\", function () {\r",
                  "    pm.expect(jsonData.price).to.eql(74.99);\r",
                  "});\r",
                  "\r",
                  "// Check if Available is true\r",
                  "pm.test(\"Book is available\", function () {\r",
                  "    pm.expect(jsonData.available).to.be.true;\r",
                  "});\r",
                  "\r",
                  "// Check Server Header\r",
                  "pm.test(\"Server header exists\", function () {\r",
                  "    pm.response.to.have.header(\"Server\");\r",
                  "});\r",
                  "\r",
                  "// Verify Content-Length (optional)\r",
                  "pm.test(\"Content-Length is within range\", function () {\r",
                  "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                  "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "exporter_id": "28814462"
          },
          "item": [
            {
              "id": "46e01cd8-928b-4b1e-b5ee-3929d9c3fb34",
              "name": "Get All Books",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "5"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "29cbac4d-dee4-4141-b328-cb306e86f602",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Validate Status Code\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate Status Text\r",
                      "pm.test(\"Status text is OK\", function () {\r",
                      "    pm.response.to.have.status(\"OK\");\r",
                      "});\r",
                      "\r",
                      "// Validate Response Time (under 2 seconds)\r",
                      "pm.test(\"Response time is within acceptable range\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
                      "});\r",
                      "\r",
                      "// Validate Headers - Check if \"Content-Type\" exists\r",
                      "pm.test(\"Content-Type header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Content-Type\");\r",
                      "});\r",
                      "\r",
                      "// Validate Content-Type is JSON\r",
                      "pm.test(\"Content-Type is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "const schema = {\r",
                      "    \"type\": \"object\",\r",
                      "    \"properties\": {\r",
                      "        \"id\": { \"type\": [\"integer\", \"string\"] },\r",
                      "        \"title\": { \"type\": \"string\" },\r",
                      "        \"author\": { \"type\": \"string\" },\r",
                      "        \"publishedYear\": { \"type\": \"integer\" },\r",
                      "        \"genre\": { \"type\": \"string\" },\r",
                      "        \"price\": { \"type\": \"number\" },\r",
                      "        \"available\": { \"type\": \"boolean\" }\r",
                      "    },\r",
                      "    \"required\": [\"id\", \"title\", \"author\", \"publishedYear\", \"genre\", \"price\", \"available\"]\r",
                      "};\r",
                      "\r",
                      "// Validate JSON Schema\r",
                      "pm.test(\"Response follows correct JSON schema\", function () {\r",
                      "    pm.response.to.have.jsonSchema(schema);\r",
                      "});\r",
                      "\r",
                      "let jsonData = pm.response.json();\r",
                      "\r",
                      "// Verify Specific ID\r",
                      "pm.test(\"ID is 6\", function () {\r",
                      "    pm.expect(jsonData.id).to.eql(\"6\");\r",
                      "});\r",
                      "\r",
                      "// Verify Title\r",
                      "pm.test(\"Book title is correct\", function () {\r",
                      "    pm.expect(jsonData.title).to.eql(\"The Art of Computer Programming\");\r",
                      "});\r",
                      "\r",
                      "// Verify Price\r",
                      "pm.test(\"Price is correctly updated\", function () {\r",
                      "    pm.expect(jsonData.price).to.eql(74.99);\r",
                      "});\r",
                      "\r",
                      "// Check if Available is true\r",
                      "pm.test(\"Book is available\", function () {\r",
                      "    pm.expect(jsonData.available).to.be.true;\r",
                      "});\r",
                      "\r",
                      "// Check Server Header\r",
                      "pm.test(\"Server header exists\", function () {\r",
                      "    pm.response.to.have.header(\"Server\");\r",
                      "});\r",
                      "\r",
                      "// Verify Content-Length (optional)\r",
                      "pm.test(\"Content-Length is within range\", function () {\r",
                      "    let contentLength = pm.response.headers.get(\"Content-Length\");\r",
                      "    pm.expect(parseInt(contentLength)).to.be.within(10, 5000);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
                  }
                }
              ]
            },
            {
              "id": "fcf98b71-66e8-4b85-a048-f3617d8a02d9",
              "name": "Add New Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": \"6\",\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 75.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "bf12342a-d96d-4c9f-9002-ac1816199736",
              "name": "Delete Book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0fb6856d-1892-487f-89df-abaf502a5dec",
              "name": "Update book",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "books",
                    "6"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 6,\r\n  \"title\": \"The Art of Computer Programming\",\r\n  \"author\": \"Donald Knuth\",\r\n  \"publishedYear\": 1968,\r\n  \"genre\": \"Computer Science\",\r\n  \"price\": 74.99,\r\n  \"available\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "3c50105a-3a43-4416-a6ce-61dc6caf94a2",
            "name": "New Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3031ef7-0c80-4ec5-8f6f-ba3a384bf04b",
          "httpRequestId": "bdac30b6-5c33-4060-8833-36b7aa75b0dc",
          "scriptId": "29cbac4d-dee4-4141-b328-cb306e86f602",
          "execution": "1a62ee70-ac14-4150-aab3-d7e1cd29e233"
        }
      }
    ],
    "error": null
  }
}